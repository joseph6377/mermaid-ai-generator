/* Modern shadcn UI Components - 2025 Edition */

/* Button Component with Glass and Gradient Effects */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  white-space: nowrap;
  border-radius: var(--radius);
  font-size: 0.875rem;
  font-weight: 500;
  height: 2.5rem;
  padding-left: 1rem;
  padding-right: 1rem;
  transition: all 0.2s ease;
  position: relative;
  overflow: hidden;
}

.btn::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0));
  opacity: 0;
  transition: opacity 0.2s ease;
}

.btn:hover::before {
  opacity: 1;
}

.btn:focus-visible {
  outline: 2px solid transparent;
  outline-offset: 2px;
  box-shadow: 0 0 0 2px hsl(var(--background)), 0 0 0 4px hsl(var(--ring));
}

.btn:disabled {
  pointer-events: none;
  opacity: 0.5;
}

.btn-primary {
  background: var(--gradient-primary);
  color: white;
  box-shadow: 0 4px 12px rgba(59, 130, 246, 0.15);
}

.btn-primary:hover {
  box-shadow: 0 6px 16px rgba(59, 130, 246, 0.25);
  transform: translateY(-1px);
}

.btn-secondary {
  background: hsl(var(--secondary));
  color: hsl(var(--secondary-foreground));
}

.btn-outline {
  background: transparent;
  border: 1px solid hsl(var(--border));
  color: hsl(var(--foreground));
  backdrop-filter: blur(8px);
}

.btn-outline:hover {
  background: rgba(0, 0, 0, 0.05);
  border-color: hsl(var(--ring));
}

.btn-ghost {
  background: transparent;
  color: hsl(var(--foreground));
}

.btn-ghost:hover {
  background: rgba(0, 0, 0, 0.05);
}

.btn-link {
  background: transparent;
  color: hsl(var(--primary));
  text-decoration: underline;
  text-underline-offset: 4px;
  height: auto;
  padding: 0;
}

/* Card Component with Modern Styling */
.card {
  border-radius: var(--radius-md);
  background-color: hsl(var(--card));
  color: hsl(var(--card-foreground));
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.04);
  transition: box-shadow 0.3s ease, transform 0.3s ease;
  overflow: hidden;
}

.card-glass {
  background: var(--glass-background);
  backdrop-filter: blur(var(--glass-blur));
  -webkit-backdrop-filter: blur(var(--glass-blur));
  border: 1px solid var(--glass-border);
  box-shadow: var(--glass-shadow);
}

.card:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.08);
}

.card-header {
  display: flex;
  flex-direction: column;
  padding: 1.5rem 1.5rem 0 1.5rem;
}

.card-title {
  font-size: 1.25rem;
  font-weight: 600;
  margin-bottom: 0.25rem;
  letter-spacing: -0.025em;
}

.card-description {
  color: hsl(var(--muted-foreground));
  font-size: 0.875rem;
}

.card-content {
  padding: 1.5rem;
}

.card-footer {
  display: flex;
  justify-content: flex-end;
  gap: 0.75rem;
  padding: 0 1.5rem 1.5rem 1.5rem;
}

/* Input Component with Modern Floating Label */
.input-wrapper {
  position: relative;
  width: 100%;
}

.input {
  width: 100%;
  height: 3rem;
  padding: 0 1rem;
  background-color: transparent;
  border: 1px solid hsl(var(--input));
  border-radius: var(--radius);
  color: hsl(var(--foreground));
  font-size: 0.875rem;
  transition: border-color 0.2s ease, box-shadow 0.2s ease;
}

.input-with-label {
  padding-top: 1.25rem;
  padding-bottom: 0.25rem;
}

.input-label {
  position: absolute;
  top: 0.5rem;
  left: 1rem;
  font-size: 0.75rem;
  color: hsl(var(--muted-foreground));
  pointer-events: none;
  transform-origin: left;
  transition: transform 0.2s ease, color 0.2s ease;
}

.input:focus {
  outline: none;
  border-color: hsl(var(--ring));
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

.input:focus + .input-label {
  color: hsl(var(--ring));
}

.input::placeholder {
  color: hsl(var(--muted-foreground));
  opacity: 0.5;
}

/* Textarea Component with Modern Styling */
.textarea {
  display: block;
  width: 100%;
  min-height: 120px;
  padding: 0.75rem 1rem;
  background-color: transparent;
  border: 1px solid hsl(var(--input));
  border-radius: var(--radius);
  color: hsl(var(--foreground));
  font-size: 0.875rem;
  resize: vertical;
  transition: border-color 0.2s ease, box-shadow 0.2s ease;
  line-height: 1.5;
}

.textarea:focus {
  outline: none;
  border-color: hsl(var(--ring));
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

.textarea::placeholder {
  color: hsl(var(--muted-foreground));
  opacity: 0.5;
}

/* Select Component with Custom Dropdown */
.select-wrapper {
  position: relative;
  width: 100%;
}

.select {
  width: 100%;
  height: 3rem;
  padding: 0 2.5rem 0 1rem;
  background-color: transparent;
  border: 1px solid hsl(var(--input));
  border-radius: var(--radius);
  color: hsl(var(--foreground));
  font-size: 0.875rem;
  appearance: none;
  transition: border-color 0.2s ease, box-shadow 0.2s ease;
}

.select-icon {
  position: absolute;
  top: 50%;
  right: 1rem;
  transform: translateY(-50%);
  pointer-events: none;
  color: hsl(var(--foreground));
  opacity: 0.5;
  transition: transform 0.2s ease;
}

.select:focus {
  outline: none;
  border-color: hsl(var(--ring));
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

.select:focus + .select-icon {
  transform: translateY(-50%) rotate(180deg);
}

/* Checkbox Component with Modern Design */
.checkbox-wrapper {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.checkbox {
  appearance: none;
  width: 1.25rem;
  height: 1.25rem;
  border: 1px solid hsl(var(--input));
  border-radius: var(--radius-sm);
  background-color: transparent;
  display: grid;
  place-content: center;
  transition: background-color 0.2s ease, border-color 0.2s ease;
}

.checkbox::before {
  content: "";
  width: 0.65em;
  height: 0.65em;
  transform: scale(0);
  transition: transform 0.1s ease-in-out;
  box-shadow: inset 1em 1em hsl(var(--primary-foreground));
  transform-origin: center;
  clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
}

.checkbox:checked {
  background-color: hsl(var(--primary));
  border-color: hsl(var(--primary));
}

.checkbox:checked::before {
  transform: scale(1);
}

.checkbox:focus-visible {
  outline: 2px solid transparent;
  outline-offset: 2px;
  box-shadow: 0 0 0 2px hsl(var(--background)), 0 0 0 4px hsl(var(--ring));
}

.checkbox-label {
  font-size: 0.875rem;
  color: hsl(var(--foreground));
  user-select: none;
}

/* Dialog/Modal Component with Glass Effect */
.dialog-overlay {
  position: fixed;
  inset: 0;
  background-color: rgba(0, 0, 0, 0.4);
  backdrop-filter: blur(4px);
  z-index: 50;
  animation: fadeIn 0.2s ease;
}

.dialog {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: var(--glass-background);
  backdrop-filter: blur(var(--glass-blur));
  border: 1px solid var(--glass-border);
  border-radius: var(--radius-lg);
  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
  max-width: 500px;
  width: 90vw;
  z-index: 51;
  animation: dialogFadeIn 0.3s ease;
  overflow: hidden;
}

@keyframes dialogFadeIn {
  from {
    opacity: 0;
    transform: translate(-50%, -48%);
  }
  to {
    opacity: 1;
    transform: translate(-50%, -50%);
  }
}

.dialog-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1.5rem;
  border-bottom: 1px solid hsl(var(--border));
}

.dialog-title {
  font-size: 1.25rem;
  font-weight: 600;
  color: hsl(var(--foreground));
}

.dialog-close {
  width: 2rem;
  height: 2rem;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  color: hsl(var(--muted-foreground));
  transition: background-color 0.2s ease, color 0.2s ease;
  background: transparent;
  border: none;
  cursor: pointer;
}

.dialog-close:hover {
  background-color: rgba(0, 0, 0, 0.05);
  color: hsl(var(--foreground));
}

.dialog-content {
  padding: 1.5rem;
}

.dialog-footer {
  display: flex;
  justify-content: flex-end;
  gap: 0.75rem;
  padding: 1.5rem;
  border-top: 1px solid hsl(var(--border));
}

/* Tabs Component with Animated Indicator */
.tabs {
  display: flex;
  flex-direction: column;
  width: 100%;
}

.tabs-list {
  position: relative;
  display: flex;
  border-bottom: 1px solid hsl(var(--border));
}

.tabs-trigger {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 3rem;
  padding: 0 1.5rem;
  font-size: 0.875rem;
  font-weight: 500;
  color: hsl(var(--muted-foreground));
  background: transparent;
  border: none;
  cursor: pointer;
  transition: color 0.2s ease;
}

.tabs-trigger[data-active="true"] {
  color: hsl(var(--foreground));
  font-weight: 600;
}

.tabs-trigger[data-active="true"]::after {
  content: "";
  position: absolute;
  bottom: -1px;
  left: 0;
  right: 0;
  height: 2px;
  background: var(--gradient-primary);
  animation: tabIndicatorIn 0.2s ease;
}

@keyframes tabIndicatorIn {
  from {
    transform: scaleX(0.5);
    opacity: 0;
  }
  to {
    transform: scaleX(1);
    opacity: 1;
  }
}

.tabs-content {
  padding: 1.5rem 0;
}

/* Avatar Component with Status Indicator */
.avatar {
  position: relative;
  border-radius: 50%;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: hsl(var(--muted));
  color: hsl(var(--muted-foreground));
  font-weight: 500;
}

.avatar-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.avatar-sm {
  width: 2rem;
  height: 2rem;
  font-size: 0.875rem;
}

.avatar-md {
  width: 2.5rem;
  height: 2.5rem;
  font-size: 1rem;
}

.avatar-lg {
  width: 3rem;
  height: 3rem;
  font-size: 1.25rem;
}

.avatar-status {
  position: absolute;
  bottom: 0;
  right: 0;
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  border: 2px solid hsl(var(--background));
}

.avatar-status-online {
  background-color: hsl(var(--success));
}

.avatar-status-offline {
  background-color: hsl(var(--muted-foreground));
}

.avatar-status-busy {
  background-color: hsl(var(--destructive));
}

/* Toast/Notification Component */
.toast {
  position: fixed;
  bottom: 1.5rem;
  right: 1.5rem;
  display: flex;
  align-items: center;
  gap: 0.75rem;
  padding: 1rem;
  background: var(--glass-background);
  backdrop-filter: blur(var(--glass-blur));
  border: 1px solid var(--glass-border);
  border-radius: var(--radius);
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
  color: hsl(var(--foreground));
  animation: toastSlideIn 0.3s ease;
  z-index: 100;
  max-width: 350px;
}

@keyframes toastSlideIn {
  from {
    opacity: 0;
    transform: translateX(2rem);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.toast-icon {
  flex-shrink: 0;
  width: 1.5rem;
  height: 1.5rem;
}

.toast-content {
  flex: 1;
}

.toast-title {
  font-weight: 600;
  font-size: 0.875rem;
  margin-bottom: 0.25rem;
}

.toast-description {
  font-size: 0.75rem;
  color: hsl(var(--muted-foreground));
}

.toast-close {
  flex-shrink: 0;
  width: 1.5rem;
  height: 1.5rem;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  color: hsl(var(--muted-foreground));
  background: transparent;
  border: none;
  cursor: pointer;
}

.toast-close:hover {
  background-color: rgba(0, 0, 0, 0.05);
  color: hsl(var(--foreground));
}

.toast-success {
  border-left: 3px solid hsl(var(--success));
}

.toast-error {
  border-left: 3px solid hsl(var(--destructive));
}

.toast-warning {
  border-left: 3px solid hsl(var(--warning));
}

.toast-info {
  border-left: 3px solid hsl(var(--primary));
}

/* Progress bar with gradient */
.progress {
  position: relative;
  width: 100%;
  height: 0.5rem;
  overflow: hidden;
  background-color: hsl(var(--muted));
  border-radius: var(--radius-full);
}

.progress-value {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  background: var(--gradient-primary);
  transition: width 0.4s ease;
}

.progress-indeterminate .progress-value {
  width: 40%;
  background: var(--gradient-primary);
  animation: indeterminateAnimation 1.5s infinite linear;
  will-change: transform;
}

@keyframes indeterminateAnimation {
  0% {
    transform: translateX(-100%);
  }
  60% {
    transform: translateX(100%);
  }
  100% {
    transform: translateX(100%);
  }
}

/* Skeleton loading component */
.skeleton {
  background: linear-gradient(
    90deg,
    hsl(var(--muted)) 25%,
    hsl(var(--muted), 0.5) 50%,
    hsl(var(--muted)) 75%
  );
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite;
  border-radius: var(--radius);
}

@keyframes shimmer {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}

/* Navigation Menu with Glass Effect */
.nav-menu {
  display: flex;
  background: var(--glass-background);
  backdrop-filter: blur(var(--glass-blur));
  border: 1px solid var(--glass-border);
  border-radius: var(--radius);
  padding: 0.5rem;
}

.nav-item {
  position: relative;
  padding: 0.75rem 1rem;
  color: hsl(var(--muted-foreground));
  font-size: 0.875rem;
  font-weight: 500;
  border-radius: var(--radius-sm);
  transition: all 0.2s ease;
  cursor: pointer;
  user-select: none;
}

.nav-item:hover {
  color: hsl(var(--foreground));
  background-color: rgba(0, 0, 0, 0.03);
}

.nav-item-active {
  color: hsl(var(--foreground));
  background-color: rgba(0, 0, 0, 0.05);
}

/* Switch component */
.switch {
  position: relative;
  display: inline-flex;
  align-items: center;
  cursor: pointer;
}

.switch-input {
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
}

.switch-slider {
  position: relative;
  display: block;
  width: 3rem;
  height: 1.5rem;
  background-color: hsl(var(--muted));
  border-radius: var(--radius-full);
  transition: background-color 0.2s ease;
}

.switch-slider::before {
  content: "";
  position: absolute;
  left: 0.2rem;
  bottom: 0.2rem;
  width: 1.1rem;
  height: 1.1rem;
  background-color: white;
  border-radius: 50%;
  transition: transform 0.2s ease;
}

.switch-input:checked + .switch-slider {
  background: var(--gradient-primary);
}

.switch-input:checked + .switch-slider::before {
  transform: translateX(1.5rem);
}

.switch-input:focus-visible + .switch-slider {
  box-shadow: 0 0 0 2px hsl(var(--background)), 0 0 0 4px hsl(var(--ring));
}

.switch-label {
  margin-left: 0.5rem;
  font-size: 0.875rem;
  color: hsl(var(--foreground));
  user-select: none;
}

/* Tooltip component */
.tooltip {
  position: relative;
  display: inline-flex;
}

.tooltip:hover::after {
  content: attr(data-tooltip);
  position: absolute;
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%);
  padding: 0.5rem 0.75rem;
  background-color: hsl(var(--foreground));
  color: hsl(var(--background));
  font-size: 0.75rem;
  border-radius: var(--radius);
  white-space: nowrap;
  pointer-events: none;
  margin-bottom: 0.5rem;
  z-index: 50;
  animation: tooltipFadeIn 0.2s ease;
}

@keyframes tooltipFadeIn {
  from {
    opacity: 0;
    transform: translate(-50%, 0.5rem);
  }
  to {
    opacity: 1;
    transform: translate(-50%, 0);
  }
}

/* Badge component */
.badge {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: var(--radius-full);
  padding: 0 0.75rem;
  height: 1.5rem;
  font-size: 0.75rem;
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 0.025em;
}

.badge-primary {
  background: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
}

.badge-secondary {
  background: hsl(var(--secondary));
  color: hsl(var(--secondary-foreground));
}

.badge-outline {
  background: transparent;
  border: 1px solid hsl(var(--border));
  color: hsl(var(--foreground));
}

.badge-destructive {
  background: hsl(var(--destructive));
  color: hsl(var(--destructive-foreground));
}

.badge-success {
  background: hsl(var(--success));
  color: hsl(var(--success-foreground));
}

/* Button Component Styles */
.inline-flex {
  display: inline-flex;
}
.items-center {
  align-items: center;
}
.justify-center {
  justify-content: center;
}
.gap-2 {
  gap: 0.5rem;
}
.whitespace-nowrap {
  white-space: nowrap;
}
.rounded-md {
  border-radius: 0.375rem;
}
.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.font-medium {
  font-weight: 500;
}
.transition-colors {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.focus-visible\:outline-none:focus-visible {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.focus-visible\:ring-1:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.focus-visible\:ring-ring:focus-visible {
  --tw-ring-color: #3b82f6;
}
.disabled\:pointer-events-none:disabled {
  pointer-events: none;
}
.disabled\:opacity-50:disabled {
  opacity: 0.5;
}
.bg-primary {
  background-color: #3b82f6;
}
.text-primary-foreground {
  color: #ffffff;
}
.shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.hover\:bg-primary\/90:hover {
  background-color: rgb(59 130 246 / 0.9);
}
.h-9 {
  height: 2.25rem;
}
.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}
.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}
.self-end {
  align-self: flex-end;
}

/* Button Outline Variant */
.border {
  border-width: 1px;
}
.border-input {
  border-color: #e2e8f0;
}
.bg-background {
  background-color: #ffffff;
}
.shadow-sm {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.hover\:bg-accent:hover {
  background-color: #f1f5f9;
}
.hover\:text-accent-foreground:hover {
  color: #1e293b;
}
.h-8 {
  height: 2rem;
}
.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}
.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

/* SVG Icons */
.lucide {
  width: 1rem;
  height: 1rem;
}
.h-4 {
  height: 1rem;
}
.w-4 {
  width: 1rem;
}
.h-5 {
  height: 1.25rem;
}
.w-5 {
  width: 1.25rem;
}

/* Flex Layout */
.flex {
  display: flex;
}
.flex-col {
  flex-direction: column;
}
.flex-grow {
  flex-grow: 1;
}
.flex-1 {
  flex: 1 1 0%;
}
.justify-between {
  justify-content: space-between;
}
.gap-1 {
  gap: 0.25rem;
}

/* Spacing and Layout */
.p-4 {
  padding: 1rem;
}
.border-b {
  border-bottom-width: 1px;
}
.border-r {
  border-right-width: 1px;
}
.h-full {
  height: 100%;
}
.h-screen {
  height: 100vh;
}
.overflow-y-auto {
  overflow-y: auto;
}
.space-y-4 > * + * {
  margin-top: 1rem;
}
.overflow-hidden {
  overflow: hidden;
}
.text-center {
  text-align: center;
}

/* Typography */
.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}
.font-bold {
  font-weight: 700;
}
.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}
.mb-2 {
  margin-bottom: 0.5rem;
}
.mt-2 {
  margin-top: 0.5rem;
}
.max-w-sm {
  max-width: 24rem;
}
.text-muted-foreground {
  color: #64748b;
}

/* Grid */
.grid {
  display: grid;
}
.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
@media (min-width: 768px) {
  .md\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .md\:text-sm {
    font-size: 0.875rem;
    line-height: 1.25rem;
  }
}

/* Textarea */
.min-h-\[80px\] {
  min-height: 80px;
}
.resize-none {
  resize: none;
}
.w-full {
  width: 100%;
}
.bg-transparent {
  background-color: transparent;
}
.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}
.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}
.placeholder\:text-muted-foreground::placeholder {
  color: #64748b;
}

/* Avatar */
.relative {
  position: relative;
}
.h-8 {
  height: 2rem;
}
.w-8 {
  width: 2rem;
}
.shrink-0 {
  flex-shrink: 0;
}
.bg-indigo-600 {
  background-color: #4f46e5;
}
.text-white {
  color: white;
}

/* Additional Helper Classes */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
} 